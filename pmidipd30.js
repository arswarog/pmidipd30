sleep_func = function() {
  var time_offset = 0;
  return function(time) {
    var p = new Promise((resolve) => setTimeout(resolve, time_offset));
    time_offset += time;
    return p;
  }
}

post_raw = function(sleep_func, dev, delay, bytes) {
  sleep_func(delay).then(() => { dev.raw(bytes); });
}

post_byte = function(sleep_func, dev, delay, b) {
  post_raw(sleep_func, dev, delay, [0x90,b>>0x04,b&0x0f]);
}

post_seq = function(sleep_func, dev, delay, seq) {
  seq.forEach(function(b) {
    post_byte(sleep_func, dev, delay, b);
  });
}

send_preamble = function(sleep, dev) {
  post_raw(sleep, dev, 250, [0x9B, 0x01, 0x02])
  post_raw(sleep, dev, 250, [0x9B, 0x7E, 0x7D])
  post_raw(sleep, dev, 250, [0x9B, 0x01, 0x03])
  post_raw(sleep, dev, 250, [0x9B, 0x00, 0x02])
}

send_scene = function(sleep, dev, index) {
  // Label
  post_seq(sleep, dev, 50, [
    index ? 0x09 : 0x00, 0x53, 0x63, 0x65, 0x6E, 0x65, 0x20, 0x31 + index,
    0x00, 0x00, 0x00, 0x00, 0x00
  ]);

  // Mod buttons 1 & 2
  post_seq(sleep, dev, 50, [
    0x01, 0x00, 0x01, 0x7F, 0x00,
    0x01, 0x00, 0x02, 0x7F, 0x00,
  ]);

  // Mod buttons 3 & 4 (as well as encoder, ostensibly; doesn't have any effect)
  post_seq(sleep, dev, 50, [
    0x01, 0x00, 0x43, 0x7F, 0x00,
    0x01, 0x00, 0x40, 0x7F, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x01, 0x0A, 0x7F, 0x00,
  ]);

  // Knobs
  post_seq(sleep, dev, 50, [
    0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10,
    0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
    0x0E, 0x0F, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16,
    0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
  ]);

  // Faders (as well as crossfader; doesn't have any effect)
  post_seq(sleep, dev, 50, [
    0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
    0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x09,
    0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  ]);

  // Buttons
  post_seq(sleep, dev, 50, [
    0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
    0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F
  ]);

  // Filler?
  post_seq(sleep, dev, 50, [
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  ]);

  // Transport
  post_seq(sleep, dev, 50, [
    0x10, 0x01, 0x2F, 0x00, 0x7F,
    0x01, 0x01, 0x2D, 0x00, 0x7F,
    0x04, 0x01, 0x30, 0x00, 0x7F,
    0x03, 0x01, 0x31, 0x00, 0x7F,
    0x00, 0x01, 0x2E, 0x00, 0x7F,
    0x02, 0x01, 0x2C, 0x00, 0x7F,
  ]);

  // Terminal byte?
  post_seq(sleep, dev, 50, [
    0x05,
  ]);
}

send_postamble = function(sleep, dev) {
  // Lots of zeros to finish, for some reason
  post_seq(sleep, dev, 50, [
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00
  ]);
}

var sleep = sleep_func();
var dev = device("USB MIDI Controller");

send_preamble(sleep, dev);
send_scene(sleep, dev, 0);
send_scene(sleep, dev, 1);
send_scene(sleep, dev, 2);
send_scene(sleep, dev, 3);
send_postamble(sleep, dev);
